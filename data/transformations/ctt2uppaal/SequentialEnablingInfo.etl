operation createSequentialEnablingInfoTaskTemplate() : Uppaal!Template {
    //// Create template
    var template = new Uppaal!Template();
    template.name = "SequentialEnablingInfo";
    
    //// Add declarations
    
    // Add elapsedTime clock
    var cl_elapsedTime = template.declareClock("elapsedTime");
    
    // Add disabled variable
    var var_suspended = template.declareBool("suspended", false);
    
    // Add iterating variable
    var var_iterating = template.declareBool("iterating", false);
    
    //// Add parameters
    
    // Create id paramater
    var var_id = createVariable("id");
    template.addParameter(createDataDeclaration(var_id), false);
    
    // Create iterative paramater
    var var_iterative = createVariable("iterative");
    template.addParameter(createDataDeclaration(var_iterative).setTypeName("bool"), false);
    
    // Create left paramater
    var var_left = createVariable("left");
    template.addParameter(createDataDeclaration(var_left), false);
    
    // Create right paramater
    var var_right = createVariable("right");
    template.addParameter(createDataDeclaration(var_right), false);
    
    
    //// Add locations
    
    // Add initial location
    var loc_disabled                             = template.createLocation("Disabled", 0, 0);
    var loc_waitingForLeftStart_s1               = template.createLocation("_0", 2, 0).makeCommitted();
    var loc_waitingForLeftStart                  = template.createLocation("WaitingForLeftStart", 3, 0);
    var loc_suspendedWhileWaitingForLeftStart_s1 = template.createLocation("_1", 3, -1).makeCommitted();
    var loc_suspendedWhileWaitingForLeftStart    = template.createLocation("SuspendedWhileWaitingForLeftStart", 3, -2);
    var loc_waitingForLeftDone_s1                = template.createLocation("_2", 4, 0).makeCommitted();
    var loc_waitingForLeftDone                   = template.createLocation("WaitingForLeftDone", 5, 0);
    var loc_suspendedWhileWaitingForLeftDone_s1  = template.createLocation("_3", 5, -1).makeCommitted();
    var loc_suspendedWhileWaitingForLeftDone     = template.createLocation("SuspendedWhileWaitingForLeftDone", 5, -2);
    var loc_waitingForRight_s1                   = template.createLocation("_4", 6, 0).makeCommitted();
    var loc_waitingForRight                      = template.createLocation("WaitingForRight", 7, 0);
    var loc_suspendedWhileWaitingForRight_s1     = template.createLocation("_5", 7, -1).makeCommitted();
    var loc_suspendedWhileWaitingForRight        = template.createLocation("SuspendedWhileWaitingForRight", 7, -2);
    var loc_done_s1                              = template.createLocation("_6", 2, 1).makeCommitted();
    var loc_done                                 = template.createLocation("Done", 2, 2);
    var loc_deactivate_s1                        = template.createLocation("_7", 1, 2).makeCommitted();
    var loc_deactivate_s2                        = template.createLocation("_8", 0.5, 2).makeCommitted();
    var loc_deactivate_s3                        = template.createLocation("_9", 0, 2).makeCommitted();

    template.init = loc_disabled;
    
    //// Add edges    
    
    var var_activate = createVariable("activate");
    var var_deactivate = createVariable("deactivate");
    var var_suspend = createVariable("suspend");
    var var_resume = createVariable("resume");
    var var_start = createVariable("start");
    var var_done = createVariable("done");
    
    template.createEdge(loc_disabled, loc_waitingForLeftStart_s1)
                                    .setSync(var_activate.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_waitingForLeftStart_s1, loc_waitingForLeftStart)
                                    .setSync(var_activate.getArrayExpression(var_left), true);
                                    
    template.createEdge(loc_waitingForLeftStart, loc_suspendedWhileWaitingForLeftStart_s1)
                                    .setSync(var_suspend.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_suspendedWhileWaitingForLeftStart_s1, loc_suspendedWhileWaitingForLeftStart)
                                    .setSync(var_suspend.getArrayExpression(var_left), true)
                                    .setGuard(var_suspended.asBoolean(false))
                                    .addUpdate(var_suspended.simpleAssignment(true));
                                    
    template.createEdge(loc_suspendedWhileWaitingForLeftStart, loc_suspendedWhileWaitingForLeftStart_s1)
                                    .setSync(var_resume.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_suspendedWhileWaitingForLeftStart_s1, loc_waitingForLeftStart)
                                    .setSync(var_resume.getArrayExpression(var_left), true)
                                    .setGuard(var_suspended.asBoolean(true))
                                    .addUpdate(var_suspended.simpleAssignment(false));
                                                           
    template.createEdge(loc_waitingForLeftStart, loc_waitingForLeftDone_s1)
                                    .setSync(var_start.getArrayExpression(var_left), false);
                                    
    template.createEdge(loc_waitingForLeftDone_s1, loc_waitingForLeftDone)
                                    .setSync(var_start.getArrayExpression(var_id), true);
                                    
    template.createEdge(loc_waitingForLeftDone, loc_suspendedWhileWaitingForLeftDone_s1)
                                    .setSync(var_suspend.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_suspendedWhileWaitingForLeftDone_s1, loc_suspendedWhileWaitingForLeftDone)
                                    .setSync(var_suspend.getArrayExpression(var_left), true)
                                    .setGuard(var_suspended.asBoolean(false))
                                    .addUpdate(var_suspended.simpleAssignment(true));
                                    
    template.createEdge(loc_suspendedWhileWaitingForLeftDone, loc_suspendedWhileWaitingForLeftDone_s1)
                                    .setSync(var_resume.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_suspendedWhileWaitingForLeftDone_s1, loc_waitingForLeftDone)
                                    .setSync(var_resume.getArrayExpression(var_left), true)
                                    .setGuard(var_suspended.asBoolean(true))
                                    .addUpdate(var_suspended.simpleAssignment(false));
                                                                                               
    template.createEdge(loc_waitingForLeftDone, loc_waitingForRight_s1)
                                    .setSync(var_done.getArrayExpression(var_left), false);
                                    
    template.createEdge(loc_waitingForRight_s1, loc_waitingForRight)
                                    .setSync(var_activate.getArrayExpression(var_right), true);
                                    
    template.createEdge(loc_waitingForRight, loc_suspendedWhileWaitingForRight_s1)
                                    .setSync(var_suspend.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_suspendedWhileWaitingForRight_s1, loc_suspendedWhileWaitingForRight)
                                    .setSync(var_suspend.getArrayExpression(var_right), true)
                                    .setGuard(var_suspended.asBoolean(false))
                                    .addUpdate(var_suspended.simpleAssignment(true));
                                    
    template.createEdge(loc_suspendedWhileWaitingForRight, loc_suspendedWhileWaitingForRight_s1)
                                    .setSync(var_resume.getArrayExpression(var_id), false);
                                    
    template.createEdge(loc_suspendedWhileWaitingForRight_s1, loc_waitingForRight)
                                    .setSync(var_resume.getArrayExpression(var_right), true)
                                    .setGuard(var_suspended.asBoolean(true))
                                    .addUpdate(var_suspended.simpleAssignment(false));
                                    
    template.createEdge(loc_waitingForRight, loc_done_s1)
                                    .setSync(var_done.getArrayExpression(var_right), false);
                                    
    template.createEdge(loc_done_s1, loc_done)
                                    .setSync(var_done.getArrayExpression(var_id), true)
                                    .setGuard(var_iterative.asBoolean(false));
                                    
    template.createEdge(loc_done_s1, loc_deactivate_s1)
                                    .setGuard(var_iterative.asBoolean(true))
                                    .addUpdate(var_iterating.simpleAssignment(true));
                                    
    template.createEdge(loc_deactivate_s1, loc_deactivate_s2)
                                    .setSync(var_deactivate.getArrayExpression(var_left), true);
                                    
    template.createEdge(loc_deactivate_s2, loc_deactivate_s3)
                                    .setSync(var_deactivate.getArrayExpression(var_right), true);
                                    
    template.createEdge(loc_deactivate_s3, loc_disabled)
                                    .setGuard(var_iterating.asBoolean(false))
                                    .addUpdate(var_iterating.simpleAssignment(false));
                                    
    template.createEdge(loc_deactivate_s3, loc_waitingForLeftStart_s1)
                                    .setGuard(var_iterating.asBoolean(true));
                                   
                                    
    // Deactivation edges
    template.createEdge(loc_disabled,                          loc_disabled).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_done,                              loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_suspendedWhileWaitingForLeftStart, loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_suspendedWhileWaitingForLeftDone,  loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_suspendedWhileWaitingForRight,     loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_waitingForLeftStart,               loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_waitingForLeftDone,                loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    template.createEdge(loc_waitingForRight,                   loc_deactivate_s1).setSync(var_deactivate.getArrayExpression(var_id), false).setColor(Uppaal!ColorKind#LIGHTGREY);
    
    
    return template;
}



















